# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    machine:
      image: cimg/base:2020.01

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install submodules from git
          command: |
            git submodule sync --recursive
            git submodule update --recursive --init

      - run:
          name: Install apt packages
          command: |
            sudo apt -qq update
            sudo apt install -y git cmake python-dev libpqxx-dev libexpat1-dev python-pip libboost-filesystem-dev libboost-program-options-dev build-essential libpcre3-dev libprotobuf-dev zlib1g-dev libboost-iostreams-dev

      - run:
          name: Install swig from source
          command: |
            wget http://prdownloads.sourceforge.net/swig/swig-3.0.12.tar.gz
            tar -zxf swig-3.0.12.tar.gz
            cd swig-3.0.12
            ./configure && make
            sudo make install
            cd ..

      - run:
          name: Install rapidjson from source
          command: |
            wget https://github.com/Tencent/rapidjson/archive/v1.1.0.tar.gz
            tar -xvf v1.1.0.tar.gz
            cd rapidjson-1.1.0
            mkdir build
            cd build
            cmake ..
            sudo make install
            cd ../..

      - run:
          name: Build pgmap
          command: |
            cd pgmap
            cd cppo5m
            protoc -I=proto proto/osmformat.proto --cpp_out=pbf
            protoc -I=proto proto/fileformat.proto --cpp_out=pbf
            cd ..
            python setup.py build
            pip install .
            make quickinit
            cd ..

      - run:
          name: Install postgis
          command: |
            sudo apt install -y postgresql postgis postgresql-9.3-postgis-2.1 postgresql-9.3-postgis-scripts postgresql-9.3-postgis-2.1-scripts

      - run:
          name: Initialize map database
          command: |
            cd pgmap
            sudo chmod o+rw .
            sudo -u postgres ./quickinit
            cd ..

      - run:
          name: install dependencies
          command: |
            pip install -r requirements.txt

      - run:
          name: initialise django database and do migration
          command: |
            sudo -u postgres psql -c "CREATE DATABASE db_settings;"
            sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE db_settings to pycrocosm;"
            cp pycrocosm/settings.py.template pycrocosm/settings.py
            python syncdbsettings.py
            python manage.py migrate

        
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            python manage.py test --keep

      - store_artifacts:
          path: test-reports
          destination: test-reports
          
